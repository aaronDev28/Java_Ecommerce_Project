/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AdminPage;

import LoginPage.DBConnection;
import LoginPage.LoginScreen;
import com.mysql.cj.util.StringUtils;
import com.sun.jdi.connect.spi.Connection;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.sql.*;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author Aaron
 */
public class AdminPanelHomePage extends javax.swing.JFrame {

    DBConnection conn;
    /**
     * Creates new form AdminPanelHomePage
     */
    public AdminPanelHomePage() {
        conn = new DBConnection();
        initComponents();
        addRowToJTable();
        LoadSalesTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        LogoutButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        NameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        DescriptionTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        PriceTextField = new javax.swing.JTextField();
        ClearPageButton = new javax.swing.JButton();
        CreateItemButton = new javax.swing.JButton();
        img = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ExistingInventoryTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        EI_IdTextField = new javax.swing.JTextField();
        EI_NameTextField = new javax.swing.JTextField();
        EI_PriceTextField = new javax.swing.JTextField();
        EI_UpdateButton = new javax.swing.JButton();
        EI_DeleteButton = new javax.swing.JButton();
        EI_ClearPageButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        PreviousSalesTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(72, 202, 228));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Admin Dashboard");

        LogoutButton.setText("Logout");
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LogoutButton)
                .addGap(36, 36, 36))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LogoutButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Item Details");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Name");

        NameTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Description");

        DescriptionTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DescriptionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescriptionTextFieldActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Price");

        PriceTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PriceTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        PriceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceTextFieldActionPerformed(evt);
            }
        });

        ClearPageButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ClearPageButton.setText("Clear Page");
        ClearPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearPageButtonActionPerformed(evt);
            }
        });

        CreateItemButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        CreateItemButton.setText("Create Item");
        CreateItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateItemButtonActionPerformed(evt);
            }
        });

        img.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jButton2.setText("Choose...");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 153, 0)));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                    .addComponent(DescriptionTextField)
                    .addComponent(PriceTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(ClearPageButton)
                        .addGap(17, 17, 17)
                        .addComponent(CreateItemButton)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(99, 99, 99))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ClearPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CreateItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(74, 74, 74)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(155, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Add New Item", jPanel1);

        ExistingInventoryTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ExistingInventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inventory ID", "Name", "Price", "Quantity Available"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ExistingInventoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExistingInventoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ExistingInventoryTable);
        if (ExistingInventoryTable.getColumnModel().getColumnCount() > 0) {
            ExistingInventoryTable.getColumnModel().getColumn(3).setMinWidth(0);
            ExistingInventoryTable.getColumnModel().getColumn(3).setPreferredWidth(0);
            ExistingInventoryTable.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("ID");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("Name");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Price");

        EI_IdTextField.setEditable(false);
        EI_IdTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        EI_NameTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        EI_PriceTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        EI_PriceTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EI_PriceTextFieldActionPerformed(evt);
            }
        });

        EI_UpdateButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        EI_UpdateButton.setText("Update Item");
        EI_UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EI_UpdateButtonActionPerformed(evt);
            }
        });

        EI_DeleteButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        EI_DeleteButton.setText("Delete Item");
        EI_DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EI_DeleteButtonActionPerformed(evt);
            }
        });

        EI_ClearPageButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        EI_ClearPageButton.setText("Clear");
        EI_ClearPageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EI_ClearPageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(EI_IdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(EI_NameTextField)
                                    .addGap(36, 36, 36)))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(EI_PriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(EI_ClearPageButton)
                        .addGap(18, 18, 18)
                        .addComponent(EI_UpdateButton)
                        .addGap(18, 18, 18)
                        .addComponent(EI_DeleteButton)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(EI_IdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EI_PriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EI_NameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EI_UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EI_DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EI_ClearPageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        jTabbedPane1.addTab("Existing Inventory", jPanel3);

        PreviousSalesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sale ID", "User Name", "Total Spent", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(PreviousSalesTable);
        if (PreviousSalesTable.getColumnModel().getColumnCount() > 0) {
            PreviousSalesTable.getColumnModel().getColumn(0).setResizable(false);
            PreviousSalesTable.getColumnModel().getColumn(1).setResizable(false);
            PreviousSalesTable.getColumnModel().getColumn(2).setResizable(false);
            PreviousSalesTable.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sales History", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EI_DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EI_DeleteButtonActionPerformed
        String itemId = EI_IdTextField.getText();
        if(itemId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select an item in order to delete.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            java.sql.Connection dbconn = conn.connectDB();
        
            try {
                PreparedStatement st = dbconn.prepareStatement("DELETE FROM products WHERE id = ?");
            
                st.setInt(1, Integer.parseInt(itemId));

                int res = st.executeUpdate();

                st.close();
                
                JOptionPane.showMessageDialog(this, "Item has succesfully been deleted.", "Success", JOptionPane.INFORMATION_MESSAGE);
                addRowToJTable();
                ClearFieldsExistingItem();
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(AdminPanelHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_EI_DeleteButtonActionPerformed

    private void EI_UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EI_UpdateButtonActionPerformed
        String itemName        = EI_NameTextField.getText();
        String itemPrice       = EI_PriceTextField.getText();
        String itemQuantity    = "0";
        String itemId          = EI_IdTextField.getText();
        
        if(itemName.isEmpty() ||
            itemPrice.isEmpty() ||
            itemQuantity.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please ensure that all fields are populated.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!isInteger(itemQuantity)) {
            //validate that quantity is an int
            JOptionPane.showMessageDialog(this, "Please ensure that the quantity is a whole number.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!isNumeric(itemPrice)) {
            //validate that price is a number
            JOptionPane.showMessageDialog(this, "Please ensure that the price is a numeric value.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            updateExistingItem(Integer.parseInt(itemId), itemName, Double.parseDouble(itemPrice), Integer.parseInt(itemQuantity));
        }
    }//GEN-LAST:event_EI_UpdateButtonActionPerformed

    private void EI_PriceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EI_PriceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EI_PriceTextFieldActionPerformed

    private void CreateItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateItemButtonActionPerformed
        String itemName        = NameTextField.getText();
        String itemPrice       = PriceTextField.getText();
        String itemQuantity    = "0";
        String itemDescription = DescriptionTextField.getText();
        
        
        if(itemName.isEmpty() ||
            itemPrice.isEmpty() ||
            itemQuantity.isEmpty() ||
            itemDescription.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please ensure that all fields are populated.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!isInteger(itemQuantity)) {
            //validate that quantity is an int
            JOptionPane.showMessageDialog(this, "Please ensure that the quantity is a whole number.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!isNumeric(itemPrice)) {
            //validate that price is a number
            JOptionPane.showMessageDialog(this, "Please ensure that the price is a numeric value.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                createNewItem(itemName, Double.parseDouble(itemPrice), Integer.parseInt(itemQuantity), itemDescription);
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(AdminPanelHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (FileNotFoundException ex) {
                java.util.logging.Logger.getLogger(AdminPanelHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_CreateItemButtonActionPerformed

    private void ClearPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearPageButtonActionPerformed
        ClearFieldsNewItem();
    }//GEN-LAST:event_ClearPageButtonActionPerformed

    private void PriceTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceTextFieldActionPerformed

    private void DescriptionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescriptionTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DescriptionTextFieldActionPerformed

    private void ExistingInventoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExistingInventoryTableMouseClicked
        int index = ExistingInventoryTable.getSelectedRow();
        TableModel model = ExistingInventoryTable.getModel();
        
        EI_IdTextField.setText(model.getValueAt(index, 0).toString());
        EI_NameTextField.setText(model.getValueAt(index, 1).toString());
        EI_PriceTextField.setText(model.getValueAt(index, 2).toString());
    }//GEN-LAST:event_ExistingInventoryTableMouseClicked

    private void EI_ClearPageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EI_ClearPageButtonActionPerformed
        ClearFieldsExistingItem();
    }//GEN-LAST:event_EI_ClearPageButtonActionPerformed

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        dispose();
        this.setVisible(false);

        LoginScreen newLoginInstance = new LoginScreen();
        newLoginInstance.setLocationRelativeTo(null);
        newLoginInstance.setTitle("Login");
        newLoginInstance.setVisible(true);
    }//GEN-LAST:event_LogoutButtonActionPerformed
    
    String s;
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        JFileChooser filechooser = new JFileChooser();
        filechooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter(".IMAGE", "jpg","png","gif");
        filechooser.addChoosableFileFilter(filter);
        int result = filechooser.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = filechooser.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            img.setIcon(ResizeImage(path));
            s = path;
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    public static boolean isNumeric(String str) { return str != null && str.matches("[-+]?\\d*\\.?\\d+"); }
    
    public static boolean isInteger(String s) {
        boolean isValidInteger = false;
        
        try
        {
            Integer.parseInt(s);
 
            isValidInteger = true;
        }
        catch (NumberFormatException ex) { }
 
        return isValidInteger;
    }
    
    private void ClearFieldsNewItem() {
        NameTextField.setText(null);
        PriceTextField.setText(null);
        DescriptionTextField.setText(null);
    }
    
    private void ClearFieldsExistingItem() {
        EI_IdTextField.setText(null);
        EI_NameTextField.setText(null);
        EI_PriceTextField.setText(null);
    }
    /**
     * @param args the command line arguments
     */
    
    public ImageIcon ResizeImage(String imgpath){
        ImageIcon MyImage = new ImageIcon(imgpath);
        Image imge = MyImage.getImage();
        Image newImage = imge.getScaledInstance(img.getWidth(), img.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImage);
        return image;
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPanelHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPanelHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPanelHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPanelHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPanelHomePage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearPageButton;
    private javax.swing.JButton CreateItemButton;
    private javax.swing.JTextField DescriptionTextField;
    private javax.swing.JButton EI_ClearPageButton;
    private javax.swing.JButton EI_DeleteButton;
    private javax.swing.JTextField EI_IdTextField;
    private javax.swing.JTextField EI_NameTextField;
    private javax.swing.JTextField EI_PriceTextField;
    private javax.swing.JButton EI_UpdateButton;
    private javax.swing.JTable ExistingInventoryTable;
    private javax.swing.JButton LogoutButton;
    private javax.swing.JTextField NameTextField;
    private javax.swing.JTable PreviousSalesTable;
    private javax.swing.JTextField PriceTextField;
    private javax.swing.JLabel img;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
    
    private void createNewItem(String itemName, double itemPrice, int itemQuantity, String itemDescription) throws SQLException, FileNotFoundException {
        java.sql.Connection dbconn = conn.connectDB();
        
        try {
                PreparedStatement st = dbconn.prepareStatement("SELECT * FROM products WHERE name = ?");
            
                st.setString(1, itemName);

                ResultSet res = st.executeQuery();

                if(res.next()) {
                    JOptionPane.showMessageDialog(this, "Item already exists in the database.", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    PreparedStatement st2 = dbconn.prepareStatement("INSERT INTO products (name, price, quantity, description, image) VALUES (?, ?, ?, ?, ?)");
                    
                    InputStream is = new FileInputStream(new File(s));
                    
                    st2.setString(1, itemName);
                    st2.setDouble(2, itemPrice);
                    st2.setInt(3, itemQuantity);
                    st2.setString(4, itemDescription);
                    st2.setBlob(5, is);

                    int res2 = st2.executeUpdate();
                    
                    JOptionPane.showMessageDialog(this, "Item created successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    
                    addRowToJTable();
                    ClearFieldsNewItem();
                }
            
                res.close();
                st.close();
            
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(AdminPanelHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
    
    private void addRowToJTable() {
        DefaultTableModel model = (DefaultTableModel) ExistingInventoryTable.getModel();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        Object rowData[] = new Object[4];
        
        java.sql.Connection dbconn = conn.connectDB();
        
        try {
            PreparedStatement st = dbconn.prepareStatement("SELECT * FROM products ORDER BY id ASC");

            ResultSet res = st.executeQuery();

            while(res.next()) {
                rowData[0] = res.getInt("id");
                rowData[1] = res.getString("name");
                rowData[2] = res.getDouble("price");
                rowData[3] = res.getInt("quantity");
        
                model.addRow(rowData);
            }
            
            res.close();
            st.close();
            
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(AdminPanelHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }        
    }

    private void updateExistingItem(int itemId, String itemName, double itemPrice, int itemQuantity) {
        java.sql.Connection dbconn = conn.connectDB();

        try {
                PreparedStatement st = dbconn.prepareStatement("UPDATE products SET name = ?, price = ?, quantity = ? WHERE id = ?");
            
                st.setString(1, itemName);
                st.setDouble(2, itemPrice);
                st.setInt(3, itemQuantity);
                st.setInt(4, itemId);

                int res = st.executeUpdate();

                JOptionPane.showMessageDialog(this, "Item updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                
                st.close();
                
                addRowToJTable();
                ClearFieldsExistingItem();
            
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(AdminPanelHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
    
    private void LoadSalesTable() {
        DefaultTableModel model = (DefaultTableModel) PreviousSalesTable.getModel();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        Object rowData[] = new Object[4];
        
        java.sql.Connection dbconn = conn.connectDB();
        
        try {
            PreparedStatement st = dbconn.prepareStatement("SELECT * FROM sales ORDER BY id DESC");

            ResultSet res = st.executeQuery();

            while(res.next()) {
                rowData[0] = res.getInt("id");
                rowData[1] = res.getString("username");
                rowData[2] = res.getDouble("total");
                rowData[3] = res.getString("date");
        
                model.addRow(rowData);
            }
            
            res.close();
            st.close();
            
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(AdminPanelHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }        
    }
}
