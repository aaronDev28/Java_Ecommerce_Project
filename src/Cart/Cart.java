/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Cart;

import AdminPage.AdminPanelHomePage;
import Items.ItemDetails;
import LoginPage.DBConnection;
import LoginPage.LoginScreen;
import Users.Dashboard;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.Hashtable;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Aaron
 */
public class Cart extends javax.swing.JFrame {

    private String userName;
    private DBConnection conn;
    private static DecimalFormat df = new DecimalFormat("0.00");
    private Hashtable<Integer, Integer> my_dict;
    /**
     * Creates new form Cart
     */
    public Cart(String username) {
        this.my_dict = new Hashtable<Integer, Integer>();
        conn = new DBConnection();
        initComponents();
        
        this.userName = username;
        
        CreateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        InventoryTable = new javax.swing.JTable();
        CheckoutButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        LogoutButton = new javax.swing.JButton();
        KeepShoppingButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        SubtotalTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        TaxTextField = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        TotalTextField = new javax.swing.JTextField();
        jSeparator6 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        EI_DeleteButtonActionPerformed = new javax.swing.JButton();
        EI_IdTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        jLabel3.setText("jLabel2");

        jTextField3.setText("jTextField2");

        jLabel5.setText("jLabel2");

        jTextField5.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cart Id", "Name", "Price", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        InventoryTable.getTableHeader().setReorderingAllowed(false);
        InventoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InventoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(InventoryTable);
        if (InventoryTable.getColumnModel().getColumnCount() > 0) {
            InventoryTable.getColumnModel().getColumn(3).setMinWidth(0);
            InventoryTable.getColumnModel().getColumn(3).setPreferredWidth(0);
            InventoryTable.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        CheckoutButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CheckoutButton.setText("Checkout");
        CheckoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckoutButtonActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(72, 202, 228));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Cart");

        LogoutButton.setText("Logout");
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LogoutButton)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LogoutButton))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        KeepShoppingButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        KeepShoppingButton.setText("Keep Shopping");
        KeepShoppingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeepShoppingButtonActionPerformed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Subtotal:");

        SubtotalTextField.setEditable(false);
        SubtotalTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        SubtotalTextField.setText("0.00");

        jLabel4.setText("Tax:");

        TaxTextField.setEditable(false);
        TaxTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        TaxTextField.setText("0.00");

        jLabel6.setText("Total:");

        TotalTextField.setEditable(false);
        TotalTextField.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        TotalTextField.setText("0.00");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(TotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(TaxTextField))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(SubtotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SubtotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TaxTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        EI_DeleteButtonActionPerformed.setText("Delete From Cart");
        EI_DeleteButtonActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EI_DeleteButtonActionPerformedActionPerformed(evt);
            }
        });

        EI_IdTextField.setEditable(false);
        EI_IdTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        EI_IdTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EI_IdTextFieldActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(EI_IdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(EI_DeleteButtonActionPerformed)
                                .addContainerGap(34, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(CheckoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(73, 73, 73))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(KeepShoppingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(53, 53, 53))))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EI_IdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EI_DeleteButtonActionPerformed))
                        .addGap(47, 47, 47)
                        .addComponent(CheckoutButton)
                        .addGap(18, 18, 18)
                        .addComponent(KeepShoppingButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InventoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InventoryTableMouseClicked
        if (evt.getClickCount() == 2 ) {
            int index        = InventoryTable.getSelectedRow();
            TableModel model = InventoryTable.getModel();
            
        
        EI_IdTextField.setText(model.getValueAt(index, 0).toString());

            int itemId = (int) model.getValueAt(index, 0);


            //ItemDetails itemDetailsInstance = new ItemDetails(itemId);
            //itemDetailsInstance.setLocationRelativeTo(null);
            //itemDetailsInstance.setTitle("Item Details");
            //itemDetailsInstance.setVisible(true);
        }
    }//GEN-LAST:event_InventoryTableMouseClicked

    private void CheckoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckoutButtonActionPerformed
        if(Double.parseDouble(TotalTextField.getText()) == 0) {
            JOptionPane.showMessageDialog(this, "Please add items to cart prior to checkout.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            InsertIntoSalesTable();
            UpdateInventoryTable();
            DropShoppingCartTable();
            ResetTotals();
            JOptionPane.showMessageDialog(this, "Checkout complete. Items are on the way!\nDelivery in 12:00 Hrs.", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
        
            dispose();
            this.setVisible(false);
        
            Cart ShoppingCartInstance = new Cart(this.userName);
            Dashboard dashBoardInstance = new Dashboard(ShoppingCartInstance);
            dashBoardInstance.setLocationRelativeTo(null);
            dashBoardInstance.setTitle("Dashboard");
            dashBoardInstance.setVisible(true);
        }
    }//GEN-LAST:event_CheckoutButtonActionPerformed

    private void KeepShoppingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeepShoppingButtonActionPerformed
        dispose();
        this.setVisible(false);
        
        Dashboard dashBoardInstance = new Dashboard(this);
        dashBoardInstance.setLocationRelativeTo(null);
        dashBoardInstance.setTitle("Dashboard");
        dashBoardInstance.setVisible(true);
    }//GEN-LAST:event_KeepShoppingButtonActionPerformed

    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        dispose();
        this.setVisible(false);

        LoginScreen newLoginInstance = new LoginScreen();
        newLoginInstance.setLocationRelativeTo(null);
        newLoginInstance.setTitle("Login");
        newLoginInstance.setVisible(true);
    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void EI_DeleteButtonActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EI_DeleteButtonActionPerformedActionPerformed
        String itemId = EI_IdTextField.getText();
        if(itemId.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select an item in order to delete.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            java.sql.Connection dbconn = conn.connectDB();
        
            try {
                PreparedStatement st = dbconn.prepareStatement("DELETE FROM " + this.getTableName() + " WHERE id = ?");
            
                st.setInt(1, Integer.parseInt(itemId));

                int res = st.executeUpdate();

                st.close();
                
                JOptionPane.showMessageDialog(this, "Item has succesfully been deleted.", "Success", JOptionPane.INFORMATION_MESSAGE);
                addRowToJTable();
                ClearFieldsExistingItem();
            } catch (SQLException ex) {
                java.util.logging.Logger.getLogger(AdminPanelHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_EI_DeleteButtonActionPerformedActionPerformed

    private void EI_IdTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EI_IdTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EI_IdTextFieldActionPerformed

    private void InsertIntoSalesTable() {
        Connection dbconn = conn.connectDB();
        
        try {
            PreparedStatement st = dbconn.prepareStatement("INSERT INTO sales (username, total) VALUES (?, ?)");
            
            st.setString(1, this.userName);
            st.setDouble(2, Double.parseDouble(TotalTextField.getText()));

            int res = st.executeUpdate();
            st.close();
            
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
    }
    private void DropShoppingCartTable() {
        Connection dbconn = conn.connectDB();

        try {
            PreparedStatement st = dbconn.prepareStatement("DROP TABLE " + this.getTableName());
            
            int res = st.executeUpdate();

            st.close();

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
    
    private void ResetTotals() {
        SubtotalTextField.setText(String.valueOf(0.00));
        TaxTextField.setText(String.valueOf(0.00));
        TotalTextField.setText(String.valueOf(0.00));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cart("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CheckoutButton;
    private javax.swing.JButton EI_DeleteButtonActionPerformed;
    private javax.swing.JTextField EI_IdTextField;
    private javax.swing.JTable InventoryTable;
    private javax.swing.JButton KeepShoppingButton;
    private javax.swing.JButton LogoutButton;
    private javax.swing.JTextField SubtotalTextField;
    private javax.swing.JTextField TaxTextField;
    private javax.swing.JTextField TotalTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables

    public void addRowToJTable() {
        
        DefaultTableModel model = (DefaultTableModel) InventoryTable.getModel();
//        InventoryTable.removeColumn(InventoryTable.getColumnModel().getColumn(3));
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        
        Object rowData[] = new Object[4];
        
        java.sql.Connection dbconn = conn.connectDB();
        
        try {
            PreparedStatement st = dbconn.prepareStatement("SELECT * FROM " + this.getTableName() + " ORDER BY id ASC");

            ResultSet res = st.executeQuery();

            while(res.next()) {
                rowData[0] = res.getInt("id");
                rowData[1] = res.getString("name");
                rowData[2] = res.getDouble("price");
                rowData[3] = res.getInt("quantity");
        
                model.addRow(rowData);
            }
            
            res.close();
            st.close();
            
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(AdminPanelHomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }  
        
        UpdateTotals();
    }
    
    private void ClearFieldsExistingItem() {
        EI_IdTextField.setText(null);
    }

    private void CreateTable() {
        Connection dbconn = conn.connectDB();
        
        try {
            PreparedStatement st = dbconn.prepareStatement("CREATE TABLE IF NOT EXISTS " + userName + "_cart (id INT AUTO_INCREMENT PRIMARY KEY) AS SELECT name, price, quantity FROM products LIMIT 0" );

            int res = st.executeUpdate();

            st.close();

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }

    public String getTableName() { return userName + "_cart"; }

    public void AddToCart(int itemId, String itemName, double itemPrice, int quantity) {
        Connection dbconn = conn.connectDB();
        
        try {
            PreparedStatement st = dbconn.prepareStatement("INSERT INTO " + this.getTableName() + " (name, price, quantity) VALUES (?, ?, ?)");

            st.setString(1, itemName);
            st.setDouble(2, itemPrice);
            st.setInt(3, quantity);
            
            int res = st.executeUpdate();

            st.close();

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
    
    public void UpdateTotals() {
        Object[] rowData = new Object [InventoryTable.getRowCount()];
        
        double subTotal = 0.00;

        for (int i = 0; i < InventoryTable.getRowCount(); i++) 
        {
            double a = (double) InventoryTable.getValueAt(i, 2);
            int b    = (int) InventoryTable.getValueAt(i, 3);
            subTotal += a * b;
        }
    
        double tax = subTotal * 0.07;
        double total = tax + subTotal;
        
        SubtotalTextField.setText(String.valueOf(df.format(subTotal)));
        TaxTextField.setText(String.valueOf(df.format(tax)));
        TotalTextField.setText(String.valueOf(df.format(total)));
    }
    
    private void ItemsInCart() {
        Connection dbconn = conn.connectDB();
        
        try {
            PreparedStatement st = dbconn.prepareStatement("SELECT id, SUM(quantity) AS quantity FROM " + this.getTableName() + " GROUP BY 1");

            ResultSet res = st.executeQuery();

            while(res.next()) {
                my_dict.put(res.getInt("id"), res.getInt("quantity"));
            }
            
            res.close();
            st.close();

        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
    
    public int QuantityByItemId(int itemId) {
        ItemsInCart();
        
        return my_dict.get(itemId) == null ? 0 : my_dict.get(itemId);
    }
    
    public void UpdateInventoryTable() {
        my_dict.clear();
    }
}
